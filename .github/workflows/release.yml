name: Release and Deploy

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1
  KAMAL_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  KAMAL_REGISTRY_USERNAME: ${{ github.actor }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          echo "image_repository_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          if [ ! -z "${{ secrets.APPSETTINGS_PATCH }}" ]; then
            echo "HAS_APPSETTINGS_PATCH=true" >> $GITHUB_ENV
          else
            echo "HAS_APPSETTINGS_PATCH=false" >> $GITHUB_ENV
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create image repository name
        run: echo "image_repository_name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Apply Production AppSettings
        if: env.HAS_APPSETTINGS_PATCH == 'true'
        run: |
          dotnet tool install -g x
          cat <<EOF >> appsettings.json.patch
          ${{ secrets.APPSETTINGS_PATCH }}
          EOF
          x patch appsettings.json.patch
        working-directory: ./MyApp

      - name: Build and push Docker image
        run: |
          dotnet publish --os linux --arch x64 -c Release -p:ContainerRepository=${{ env.image_repository_name }} -p:ContainerRegistry=ghcr.io -p:ContainerImageTags=latest -p:ContainerPort=80

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true

      - name: Install Kamal
        run: gem install kamal -v 2.1.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:master

      - name: Deploy with Kamal
        run: |
          kamal lock release -v
          kamal deploy -P --version latest